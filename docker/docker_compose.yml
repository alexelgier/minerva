# docker-compose.yml
version: '3.8'

services:
  # Temporal Server
  temporal:
    image: temporalio/auto-setup:1.22.0
    ports:
      - "7233:7233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    volumes:
      - ./temporal-config:/etc/temporal/config/dynamicconfig
    depends_on:
      - postgresql
    networks:
      - minerva-network

  # Temporal UI
  temporal-ui:
    image: temporalio/ui:2.21.3
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    depends_on:
      - temporal
    networks:
      - minerva-network

  # PostgreSQL for Temporal
  postgresql:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
      POSTGRES_DB: temporal
    volumes:
      - temporal-postgresql:/var/lib/postgresql/data
    networks:
      - minerva-network

  # Your existing services...
  neo4j:
    image: neo4j:5.13
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
    networks:
      - minerva-network

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama
    networks:
      - minerva-network

  # Minerva Pipeline Worker
  minerva-worker:
    build: .
    command: python -m pipeline.temporal_orchestrator
    volumes:
      - .:/app
    depends_on:
      - temporal
      - neo4j
      - ollama
    networks:
      - minerva-network

  # Minerva API
  minerva-api:
    build: .
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - temporal
      - neo4j
    networks:
      - minerva-network

  # Vue.js Dashboard
  minerva-dashboard:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - minerva-network

volumes:
  temporal-postgresql:

networks:
  minerva-network:
    driver: bridge